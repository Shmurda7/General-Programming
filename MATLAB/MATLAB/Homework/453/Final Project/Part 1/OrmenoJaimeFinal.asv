clear;clc; close all;

%% Initial Conditions
%time
tf = 100;
tspan = [0 tf];
dt = 0.01;

%givens for T-37 Dragonfly (trainer) for Longitudinal Motion
%speed of sound
delta_u = 0; %ft/s
delta_q_long = 0; %deg/s
delta_theta = 1*(pi/180); %deg
delta_a = 1*(pi/180); %deg

% putting together the initial state vector
x0 = [delta_u, delta_a, delta_q_long, delta_theta]';

%givens for T-37 Dragonfly (trainer) for Lateral Motion
%speed of sound
delta_p_lat = 0; %ft/s
delta_r = 0; %deg/s
delta_beta = 1*(pi/180); %deg
delta_phi = 1*(pi/180); %deg

% putting together the initial state vector
y0 = [delta_p_lat, delta_r, delta_beta, delta_phi]';

%% using RK4 - correct implementation of this results in extra credit
% initialize the integrated parameters
t_rk4 = 0;
x_rk4 = x0;

% initialize output logging
time_log_rk4 = [];
x_log_rk4 = [];

% RK4 integration loop
while t_rk4 <= tf
%**************** Long *****************
% output datalogging
time_log_rk4(end+1,:) = t_rk4;
x_log_rk4(end+1,:) = x_rk4';
% calculating the derivatives
k1 = EOM_LONG(x_rk4);
k2 = EOM_LONG(x_rk4 + k1*dt/2);
k3 = EOM_LONG(x_rk4 + k2*dt/2);
k4 = EOM_LONG(x_rk4 + k3*dt);
% calculating the increment of the state vector
dx = (dt/6)*(k1 + 2*k2 + 2*k3 + k4);
% increment the state vector
x_rk4 = x_rk4 + dx;
% increment the integration time - this is super important, failure to
% do this will result in getting stuck in the loop forever
t_rk4 = t_rk4 + dt;

%*************** Lateral ***************
% output datalogging
time_log_rk4(end+1,:) = t_rk4;
x_log_rk4(end+1,:) = x_rk4';
% calculating the derivatives
k1 = EOM_LONG(x_rk4);
k2 = EOM_LONG(x_rk4 + k1*dt/2);
k3 = EOM_LONG(x_rk4 + k2*dt/2);
k4 = EOM_LONG(x_rk4 + k3*dt);
% calculating the increment of the state vector
dx = (dt/6)*(k1 + 2*k2 + 2*k3 + k4);
% increment the state vector
x_rk4 = x_rk4 + dx;
% increment the integration time - this is super important, failure to
% do this will result in getting stuck in the loop forever
t_rk4 = t_rk4 + dt;
end

figure(1)
plot(time_log_rk4(:,1), x_log_rk4(:,1),'color','b','linewidth',2)
hold on
grid on
title('u vs t')
xlabel('time [s]')
ylabel('delta u [m/s]')

figure(2)
plot(time_log_rk4(:,1), x_log_rk4(:,2),'color','b','linewidth',2)
hold on
grid on
title('a vs t')
xlabel('time [s]')
ylabel('delta a [m/s]')

figure(3)
plot(time_log_rk4(:,1), x_log_rk4(:,3),'color','b','linewidth',2)
hold on
grid on
title('q vs t')
xlabel('time [s]')
ylabel('delta q [m/s]')

figure(4)
plot(time_log_rk4(:,1), x_log_rk4(:,4),'color','b','linewidth',2)
hold on
grid on
title('theta vs t')
xlabel('time [s]')
ylabel('delta theta [m/s]')
