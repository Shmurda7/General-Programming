%implements s4_b0_b95nr_Outputs "C"

%function OutputsForTID(block, system, tid) Output
%if tid == 0
%assign ::GlobalCurrentTID = 0
%<SLibCGIRAccessLocalDWork(20, 0)> %% dzyocmumow
%assign cfgTxt = ""
%openfile cfgTxt
%assign localVarDecl = ""
%openfile localVarDecl

real_T c2g3f2ksqa_idx_0;
real_T c2g3f2ksqa_idx_1;
real_T c2g3f2ksqa_idx_2;
real_T eubyht22ph_idx_0;
real_T eubyht22ph_idx_1;
real_T eubyht22ph_idx_2;
real_T fmmgro5a3o_idx_1;
real_T fmmgro5a3o_idx_2;
real_T irz13ngnad;
int32_T i;
%closefile localVarDecl
%assign tlcOutputsFcnOfS4B1 = OpaqueTLCBlockFcn("Outputs", 4, 1, 0, 3, 0)
%<SLibGetRootInportsFromFile(system, TLC_FALSE)>
%<SLibGenerateExtModeOutput(system)>
irz13ngnad = %<(SLibCG_SE(LibGetT()))>;
rtB.p0shvkceq5[0] = rtX.e23jdsrfeo[0];
rtB.gmtjwxhcc4[0] = rtX.n5z0itpfcl[0];
if (irz13ngnad > rtP.Switch_Threshold) {
    rtB.ntqzzqi1dc[0] = rtP.Thrust1_Value[0];
    rtB.ntqzzqi1dc[1] = rtP.Thrust1_Value[1];
} else {
    rtB.ntqzzqi1dc[0] = rtP.Thrust_Value[0];
    rtB.ntqzzqi1dc[1] = rtP.Thrust_Value[1];
}
rtB.p0shvkceq5[1] = rtX.e23jdsrfeo[1];
rtB.gmtjwxhcc4[1] = rtX.n5z0itpfcl[1];
rtB.p0shvkceq5[2] = rtX.e23jdsrfeo[2];
rtB.gmtjwxhcc4[2] = rtX.n5z0itpfcl[2];
if (irz13ngnad > rtP.Switch_Threshold) {
    rtB.ntqzzqi1dc[2] = rtP.Thrust1_Value[2];
} else {
    rtB.ntqzzqi1dc[2] = rtP.Thrust_Value[2];
}
rtB.gsdo2pjwzd = rtB.ntqzzqi1dc[2] - rtB.hcxyo5x1fp;
rtB.bvik5bxnsw[0] = rtB.gmtjwxhcc4[2];
rtB.bvik5bxnsw[1] = rtB.gmtjwxhcc4[1];
rtB.bvik5bxnsw[2] = rtB.gmtjwxhcc4[0];
/* Unit Conversion - from: m to: ft
 Expression: output = (3.28084*input) + (0) */
muDoubleScalarSinCos(rtB.bvik5bxnsw[0], &eubyht22ph_idx_0, &irz13ngnad);
rtB.eenfrxbcez[0] = rtB.p0shvkceq5[0] * rtB.p0shvkceq5[0] * 3.280839895013123;
muDoubleScalarSinCos(rtB.bvik5bxnsw[1], &eubyht22ph_idx_1, &fmmgro5a3o_idx_1);
rtB.eenfrxbcez[1] = rtB.p0shvkceq5[1] * rtB.p0shvkceq5[1] * 3.280839895013123;
muDoubleScalarSinCos(rtB.bvik5bxnsw[2], &eubyht22ph_idx_2, &fmmgro5a3o_idx_2);
rtB.eenfrxbcez[2] = rtB.p0shvkceq5[2] * rtB.p0shvkceq5[2] * 3.280839895013123;
rtB.nxlaprucin[0] = irz13ngnad * fmmgro5a3o_idx_1;
rtB.nxlaprucin[1] = eubyht22ph_idx_1 * eubyht22ph_idx_2 * irz13ngnad - eubyht22ph_idx_0 * fmmgro5a3o_idx_2;
rtB.nxlaprucin[2] = eubyht22ph_idx_1 * fmmgro5a3o_idx_2 * irz13ngnad + eubyht22ph_idx_0 * eubyht22ph_idx_2;
rtB.nxlaprucin[3] = eubyht22ph_idx_0 * fmmgro5a3o_idx_1;
rtB.nxlaprucin[4] = eubyht22ph_idx_1 * eubyht22ph_idx_2 * eubyht22ph_idx_0 + irz13ngnad * fmmgro5a3o_idx_2;
rtB.nxlaprucin[5] = eubyht22ph_idx_1 * fmmgro5a3o_idx_2 * eubyht22ph_idx_0 - irz13ngnad * eubyht22ph_idx_2;
rtB.nxlaprucin[6] = -eubyht22ph_idx_1;
rtB.nxlaprucin[7] = fmmgro5a3o_idx_1 * eubyht22ph_idx_2;
rtB.nxlaprucin[8] = fmmgro5a3o_idx_1 * fmmgro5a3o_idx_2;
if (%<(RTMGetIsModeUpdateTimeStep())>) {
    rtDW.k3zlzo4rka[0] = rtB.eenfrxbcez[0] >= rtP.uftinf_UpperSat ? 1 : rtB.eenfrxbcez[0] > rtP.uftinf_LowerSat ? 0 : -1;
    rtDW.k3zlzo4rka[1] = rtB.eenfrxbcez[1] >= rtP.uftinf_UpperSat ? 1 : rtB.eenfrxbcez[1] > rtP.uftinf_LowerSat ? 0 : -1;
    rtDW.k3zlzo4rka[2] = rtB.eenfrxbcez[2] >= rtP.uftinf_UpperSat ? 1 : rtB.eenfrxbcez[2] > rtP.uftinf_LowerSat ? 0 : -1;
}
eubyht22ph_idx_2 = rtDW.k3zlzo4rka[0] == 1 ? rtP.uftinf_UpperSat : rtDW.k3zlzo4rka[0] == -1 ? rtP.uftinf_LowerSat : rtB.eenfrxbcez[0];
rtB.kzzs5lii4k[0] = eubyht22ph_idx_2;
fmmgro5a3o_idx_2 = rtP.hz0_Gain * eubyht22ph_idx_2;
rtB.hndudxkdvr[0] = fmmgro5a3o_idx_2;
irz13ngnad = fmmgro5a3o_idx_2;
eubyht22ph_idx_2 = rtDW.k3zlzo4rka[1] == 1 ? rtP.uftinf_UpperSat : rtDW.k3zlzo4rka[1] == -1 ? rtP.uftinf_LowerSat : rtB.eenfrxbcez[1];
rtB.kzzs5lii4k[1] = eubyht22ph_idx_2;
fmmgro5a3o_idx_2 = rtP.hz0_Gain * eubyht22ph_idx_2;
rtB.hndudxkdvr[1] = fmmgro5a3o_idx_2;
fmmgro5a3o_idx_1 = fmmgro5a3o_idx_2;
eubyht22ph_idx_2 = rtDW.k3zlzo4rka[2] == 1 ? rtP.uftinf_UpperSat : rtDW.k3zlzo4rka[2] == -1 ? rtP.uftinf_LowerSat : rtB.eenfrxbcez[2];
rtB.kzzs5lii4k[2] = eubyht22ph_idx_2;
fmmgro5a3o_idx_2 = rtP.hz0_Gain * eubyht22ph_idx_2;
rtB.hndudxkdvr[2] = fmmgro5a3o_idx_2;
if (%<(LibIsMajorTimeStep())>) {
    if (rtDW.pyhu0x3txh != 0) {
        %<(RTMSetBlockStateForSolverChangedAtMajorStep())>;
        %<(RTMSetContTimeOutputInconsistentWithStateAtMajorStep())>;
        rtDW.pyhu0x3txh = 0;
    }
} else {
    if (irz13ngnad < 0.0) {
        irz13ngnad = 0.0;
        rtDW.pyhu0x3txh = 1;
    }
    if (fmmgro5a3o_idx_1 < 0.0) {
        fmmgro5a3o_idx_1 = 0.0;
        rtDW.pyhu0x3txh = 1;
    }
    if (fmmgro5a3o_idx_2 < 0.0) {
        fmmgro5a3o_idx_2 = 0.0;
        rtDW.pyhu0x3txh = 1;
    }
}
irz13ngnad = muDoubleScalarLog(irz13ngnad) / rtB.glou0tzny0;
rtB.fvn3vgbif3[0] = irz13ngnad;
rtB.jes3bzaku0[0] = irz13ngnad * rtB.o2yo20byci[0];
irz13ngnad = muDoubleScalarLog(fmmgro5a3o_idx_1) / rtB.glou0tzny0;
rtB.fvn3vgbif3[1] = irz13ngnad;
rtB.jes3bzaku0[1] = irz13ngnad * rtB.o2yo20byci[1];
irz13ngnad = muDoubleScalarLog(fmmgro5a3o_idx_2) / rtB.glou0tzny0;
rtB.fvn3vgbif3[2] = irz13ngnad;
rtB.jes3bzaku0[2] = irz13ngnad * rtB.o2yo20byci[2];
irz13ngnad = rtB.jes3bzaku0[1];
eubyht22ph_idx_2 = rtB.jes3bzaku0[0];
fmmgro5a3o_idx_1 = rtB.jes3bzaku0[2];
for (i = 0; i < 3; i++) {
    rtB.nz4yxh1qfq[i] = (rtB.nxlaprucin[i + 3] * irz13ngnad + rtB.nxlaprucin[i] * eubyht22ph_idx_2) + rtB.nxlaprucin[i + 6] * fmmgro5a3o_idx_1;
}
if (%<(RTMGetIsModeUpdateTimeStep())>) {
    rtDW.eyovwuix3c[0] = rtB.p0shvkceq5[0] >= rtP.Limitaltitudetotroposhere_UpperSat ? 1 : rtB.p0shvkceq5[0] > rtP.Limitaltitudetotroposhere_LowerSat ? 0 : -1;
    rtDW.eyovwuix3c[1] = rtB.p0shvkceq5[1] >= rtP.Limitaltitudetotroposhere_UpperSat ? 1 : rtB.p0shvkceq5[1] > rtP.Limitaltitudetotroposhere_LowerSat ? 0 : -1;
    rtDW.eyovwuix3c[2] = rtB.p0shvkceq5[2] >= rtP.Limitaltitudetotroposhere_UpperSat ? 1 : rtB.p0shvkceq5[2] > rtP.Limitaltitudetotroposhere_LowerSat ? 0 : -1;
}
irz13ngnad = rtDW.eyovwuix3c[0] == 1 ? rtP.Limitaltitudetotroposhere_UpperSat : rtDW.eyovwuix3c[0] == -1 ? rtP.Limitaltitudetotroposhere_LowerSat : rtB.p0shvkceq5[0];
rtB.pzpb0aaq1i[0] = irz13ngnad;
irz13ngnad *= rtP.LapseRate_Gain;
rtB.az30op0bz1[0] = irz13ngnad;
irz13ngnad = rtP.SeaLevelTemperature_Value - irz13ngnad;
rtB.djlhbobpcq[0] = irz13ngnad;
rtB.efsisy4fdx[0] = rtP.uT0_Gain * irz13ngnad;
if ((rtB.efsisy4fdx[0] < 0.0) && (rtP.Constant_Value_f1hpxzhsax > muDoubleScalarFloor(rtP.Constant_Value_f1hpxzhsax))) {
    fmmgro5a3o_idx_1 = -muDoubleScalarPower(-rtB.efsisy4fdx[0], rtP.Constant_Value_f1hpxzhsax);
} else {
    fmmgro5a3o_idx_1 = muDoubleScalarPower(rtB.efsisy4fdx[0], rtP.Constant_Value_f1hpxzhsax);
}
irz13ngnad = fmmgro5a3o_idx_1 / rtB.efsisy4fdx[0];
rtB.pocvhehxoq[0] = irz13ngnad;
rtB.frtaiwzqi5[0] = rtP.rho0_Gain * irz13ngnad;
rtB.gx2bnlk0lw[0] = rtP.AltitudeofTroposphere_Value - rtB.p0shvkceq5[0];
irz13ngnad = rtDW.eyovwuix3c[1] == 1 ? rtP.Limitaltitudetotroposhere_UpperSat : rtDW.eyovwuix3c[1] == -1 ? rtP.Limitaltitudetotroposhere_LowerSat : rtB.p0shvkceq5[1];
rtB.pzpb0aaq1i[1] = irz13ngnad;
irz13ngnad *= rtP.LapseRate_Gain;
rtB.az30op0bz1[1] = irz13ngnad;
irz13ngnad = rtP.SeaLevelTemperature_Value - irz13ngnad;
rtB.djlhbobpcq[1] = irz13ngnad;
rtB.efsisy4fdx[1] = rtP.uT0_Gain * irz13ngnad;
if ((rtB.efsisy4fdx[1] < 0.0) && (rtP.Constant_Value_f1hpxzhsax > muDoubleScalarFloor(rtP.Constant_Value_f1hpxzhsax))) {
    fmmgro5a3o_idx_1 = -muDoubleScalarPower(-rtB.efsisy4fdx[1], rtP.Constant_Value_f1hpxzhsax);
} else {
    fmmgro5a3o_idx_1 = muDoubleScalarPower(rtB.efsisy4fdx[1], rtP.Constant_Value_f1hpxzhsax);
}
irz13ngnad = fmmgro5a3o_idx_1 / rtB.efsisy4fdx[1];
rtB.pocvhehxoq[1] = irz13ngnad;
rtB.frtaiwzqi5[1] = rtP.rho0_Gain * irz13ngnad;
rtB.gx2bnlk0lw[1] = rtP.AltitudeofTroposphere_Value - rtB.p0shvkceq5[1];
irz13ngnad = rtDW.eyovwuix3c[2] == 1 ? rtP.Limitaltitudetotroposhere_UpperSat : rtDW.eyovwuix3c[2] == -1 ? rtP.Limitaltitudetotroposhere_LowerSat : rtB.p0shvkceq5[2];
rtB.pzpb0aaq1i[2] = irz13ngnad;
irz13ngnad *= rtP.LapseRate_Gain;
rtB.az30op0bz1[2] = irz13ngnad;
irz13ngnad = rtP.SeaLevelTemperature_Value - irz13ngnad;
rtB.djlhbobpcq[2] = irz13ngnad;
rtB.efsisy4fdx[2] = rtP.uT0_Gain * irz13ngnad;
if ((rtB.efsisy4fdx[2] < 0.0) && (rtP.Constant_Value_f1hpxzhsax > muDoubleScalarFloor(rtP.Constant_Value_f1hpxzhsax))) {
    fmmgro5a3o_idx_1 = -muDoubleScalarPower(-rtB.efsisy4fdx[2], rtP.Constant_Value_f1hpxzhsax);
} else {
    fmmgro5a3o_idx_1 = muDoubleScalarPower(rtB.efsisy4fdx[2], rtP.Constant_Value_f1hpxzhsax);
}
irz13ngnad = fmmgro5a3o_idx_1 / rtB.efsisy4fdx[2];
rtB.pocvhehxoq[2] = irz13ngnad;
rtB.frtaiwzqi5[2] = rtP.rho0_Gain * irz13ngnad;
rtB.gx2bnlk0lw[2] = rtP.AltitudeofTroposphere_Value - rtB.p0shvkceq5[2];
if (%<(RTMGetIsModeUpdateTimeStep())>) {
    rtDW.ljats3taij[0] = rtB.gx2bnlk0lw[0] >= rtP.LimitaltitudetoStratosphere_UpperSat ? 1 : rtB.gx2bnlk0lw[0] > rtP.LimitaltitudetoStratosphere_LowerSat ? 0 : -1;
    rtDW.ljats3taij[1] = rtB.gx2bnlk0lw[1] >= rtP.LimitaltitudetoStratosphere_UpperSat ? 1 : rtB.gx2bnlk0lw[1] > rtP.LimitaltitudetoStratosphere_LowerSat ? 0 : -1;
    rtDW.ljats3taij[2] = rtB.gx2bnlk0lw[2] >= rtP.LimitaltitudetoStratosphere_UpperSat ? 1 : rtB.gx2bnlk0lw[2] > rtP.LimitaltitudetoStratosphere_LowerSat ? 0 : -1;
}
irz13ngnad = rtDW.ljats3taij[0] == 1 ? rtP.LimitaltitudetoStratosphere_UpperSat : rtDW.ljats3taij[0] == -1 ? rtP.LimitaltitudetoStratosphere_LowerSat : rtB.gx2bnlk0lw[0];
rtB.bbyymkm3vn[0] = irz13ngnad;
irz13ngnad *= rtP.gR_Gain;
rtB.gus0dwpmta[0] = irz13ngnad;
rtB.ons4nt2sr3[0] = 1.0 / rtB.djlhbobpcq[0] * irz13ngnad;
irz13ngnad = rtB.frtaiwzqi5[0] * muDoubleScalarExp(rtB.ons4nt2sr3[0]);
rtB.cs1icxkpbk[0] = irz13ngnad;
irz13ngnad *= rtB.nz4yxh1qfq[0] * rtP.Constant3_Value;
rtB.eweodspclo[0] = irz13ngnad;
irz13ngnad *= rtP.AerodynamicForcesandMoments_S;
rtB.beqzc5bw0r[0] = irz13ngnad;
rtB.ppbw2ujmty[0] = irz13ngnad * rtB.czkarcoix3[0];
irz13ngnad = rtDW.ljats3taij[1] == 1 ? rtP.LimitaltitudetoStratosphere_UpperSat : rtDW.ljats3taij[1] == -1 ? rtP.LimitaltitudetoStratosphere_LowerSat : rtB.gx2bnlk0lw[1];
rtB.bbyymkm3vn[1] = irz13ngnad;
irz13ngnad *= rtP.gR_Gain;
rtB.gus0dwpmta[1] = irz13ngnad;
rtB.ons4nt2sr3[1] = 1.0 / rtB.djlhbobpcq[1] * irz13ngnad;
irz13ngnad = rtB.frtaiwzqi5[1] * muDoubleScalarExp(rtB.ons4nt2sr3[1]);
rtB.cs1icxkpbk[1] = irz13ngnad;
irz13ngnad *= rtB.nz4yxh1qfq[1] * rtP.Constant3_Value;
rtB.eweodspclo[1] = irz13ngnad;
irz13ngnad *= rtP.AerodynamicForcesandMoments_S;
rtB.beqzc5bw0r[1] = irz13ngnad;
rtB.ppbw2ujmty[1] = irz13ngnad * rtB.czkarcoix3[1];
irz13ngnad = rtDW.ljats3taij[2] == 1 ? rtP.LimitaltitudetoStratosphere_UpperSat : rtDW.ljats3taij[2] == -1 ? rtP.LimitaltitudetoStratosphere_LowerSat : rtB.gx2bnlk0lw[2];
rtB.bbyymkm3vn[2] = irz13ngnad;
irz13ngnad *= rtP.gR_Gain;
rtB.gus0dwpmta[2] = irz13ngnad;
rtB.ons4nt2sr3[2] = 1.0 / rtB.djlhbobpcq[2] * irz13ngnad;
irz13ngnad = rtB.frtaiwzqi5[2] * muDoubleScalarExp(rtB.ons4nt2sr3[2]);
rtB.cs1icxkpbk[2] = irz13ngnad;
irz13ngnad *= rtB.nz4yxh1qfq[2] * rtP.Constant3_Value;
rtB.eweodspclo[2] = irz13ngnad;
irz13ngnad *= rtP.AerodynamicForcesandMoments_S;
rtB.beqzc5bw0r[2] = irz13ngnad;
rtB.ppbw2ujmty[2] = irz13ngnad * rtB.czkarcoix3[2];
rtB.a5kvjjzqcc[0] = rtB.ntqzzqi1dc[0] - rtB.ppbw2ujmty[0];
rtB.a5kvjjzqcc[1] = rtB.ntqzzqi1dc[1] - rtB.ppbw2ujmty[1];
rtB.a5kvjjzqcc[2] = rtB.gsdo2pjwzd - rtB.ppbw2ujmty[2];
%<tlcOutputsFcnOfS4B1>\
/* Unit Conversion - from: rad to: deg
 Expression: output = (57.2958*input) + (0) */
rtB.ltespdje45[0] = (rtB.p0shvkceq5[0] * rtB.pq2n04xswi - rtB.p0shvkceq5[1] * rtB.legy4gcyuq) * rtB.o0lznmwy04 * 57.295779513082323 + rtB.idzov0xqov;
rtB.ltespdje45[1] = (rtB.p0shvkceq5[0] * rtB.legy4gcyuq + rtB.p0shvkceq5[1] * rtB.pq2n04xswi) * rtB.frkjltmijt * 57.295779513082323 + rtB.kf3nkdp1sm;
if (%<(RTMGetIsModeUpdateTimeStep())>) {
    rtDW.kmks0kqlp2 = (rtB.ltespdje45[0] >= 0.0);
}
rtB.f3grp50dae = rtDW.kmks0kqlp2 > 0 ? rtB.ltespdje45[0] : -rtB.ltespdje45[0];
if (%<(SLibCGIRIsSampleHit(1, 4))>) {
    if (%<(RTMGetIsModeUpdateTimeStep())>) {
        rtDW.k4tj0ddmtk = (rtB.f3grp50dae > rtP.CompareToConstant_const_pwri3oqztp);
    }
    rtB.kjw21vg1pk = rtDW.k4tj0ddmtk;
}
if (rtB.kjw21vg1pk) {
    rtB.a4vnpcfi1i = muDoubleScalarMod(rtB.ltespdje45[0] + rtP.Bias_Bias, rtP.Constant2_Value) + rtP.Bias1_Bias;
} else {
    rtB.a4vnpcfi1i = rtB.ltespdje45[0];
}
if (%<(RTMGetIsModeUpdateTimeStep())>) {
    rtDW.nentsm3ztg = (rtB.a4vnpcfi1i >= 0.0);
}
rtB.cnuqgk0ctt = rtDW.nentsm3ztg > 0 ? rtB.a4vnpcfi1i : -rtB.a4vnpcfi1i;
if (%<(SLibCGIRIsSampleHit(1, 4))>) {
    if (%<(RTMGetIsModeUpdateTimeStep())>) {
        rtDW.i3cpbuohc4 = (rtB.cnuqgk0ctt > rtP.CompareToConstant_const);
    }
    if (rtB.a4vnpcfi1i > 0.0) {
        rtDW.lzyi1v2xh5 = 1;
    } else if (rtB.a4vnpcfi1i < 0.0) {
        rtDW.lzyi1v2xh5 = -1;
    } else {
        rtDW.lzyi1v2xh5 = 0;
    }
    if (rtDW.i3cpbuohc4) {
        rtB.apnu1iub5y = rtP.Constant_Value_ky3avngojs;
    } else {
        rtB.apnu1iub5y = rtP.Constant1_Value;
    }
}
rtB.bzbu3yseb2 = rtB.apnu1iub5y + rtB.ltespdje45[1];
if (%<(RTMGetIsModeUpdateTimeStep())>) {
    rtDW.gbjv2wu0pg = (rtB.bzbu3yseb2 >= 0.0);
}
rtB.dekfyvtcle = rtDW.gbjv2wu0pg > 0 ? rtB.bzbu3yseb2 : -rtB.bzbu3yseb2;
if (%<(SLibCG_SE(SLibCGIRIsSampleHit(1, 4)))> && %<(SLibCG_SE(RTMGetIsModeUpdateTimeStep()))>) {
    rtDW.j0vp3pypgy = (rtB.dekfyvtcle > rtP.CompareToConstant_const_eds1jbkaw1);
}
rtB.p1cjwgdban[0] = rtX.ffm313ejt1[0];
muDoubleScalarSinCos(rtB.gmtjwxhcc4[0], &irz13ngnad, &eubyht22ph_idx_0);
rtB.p1cjwgdban[1] = rtX.ffm313ejt1[1];
muDoubleScalarSinCos(rtB.gmtjwxhcc4[1], &fmmgro5a3o_idx_1, &eubyht22ph_idx_1);
rtB.p1cjwgdban[2] = rtX.ffm313ejt1[2];
rtB.jrvb2m0kwj[0] = (irz13ngnad * rtB.p1cjwgdban[1] + eubyht22ph_idx_0 * rtB.p1cjwgdban[2]) * (fmmgro5a3o_idx_1 / eubyht22ph_idx_1) + rtB.p1cjwgdban[0];
rtB.jrvb2m0kwj[1] = eubyht22ph_idx_0 * rtB.p1cjwgdban[1] - irz13ngnad * rtB.p1cjwgdban[2];
rtB.jrvb2m0kwj[2] = (irz13ngnad * rtB.p1cjwgdban[1] + eubyht22ph_idx_0 * rtB.p1cjwgdban[2]) / eubyht22ph_idx_1;
irz13ngnad = rtB.p1cjwgdban[1];
eubyht22ph_idx_0 = rtB.p1cjwgdban[0];
eubyht22ph_idx_1 = rtB.p1cjwgdban[2];
for (i = 0; i < 3; i++) {
    rtB.gaqfxcn5mu[i] = (rtB.i4ejkbvukm[i + 3] * irz13ngnad + rtB.i4ejkbvukm[i] * eubyht22ph_idx_0) + rtB.i4ejkbvukm[i + 6] * eubyht22ph_idx_1;
    rtB.mplveaosnc[i] = (rtB.mqmfqguhsp[i + 3] * irz13ngnad + rtB.mqmfqguhsp[i] * eubyht22ph_idx_0) + rtB.mqmfqguhsp[i + 6] * eubyht22ph_idx_1;
}
rtB.fq0udmcr0d = rtB.p1cjwgdban[0] * rtB.mplveaosnc[1];
rtB.i25dx5gfjj = rtB.p1cjwgdban[1] * rtB.mplveaosnc[2];
rtB.azigzyu2ua = rtB.mplveaosnc[0] * rtB.p1cjwgdban[2];
rtB.osmqo5ipx2 = rtB.p1cjwgdban[0] * rtB.mplveaosnc[2];
rtB.mxurwdq3rp = rtB.mplveaosnc[0] * rtB.p1cjwgdban[1];
rtB.n5my3rkxnx = rtB.mplveaosnc[1] * rtB.p1cjwgdban[2];
rtB.h4mpthrjzj[0] = rtB.i25dx5gfjj - rtB.n5my3rkxnx;
rtB.h4mpthrjzj[1] = rtB.azigzyu2ua - rtB.osmqo5ipx2;
rtB.h4mpthrjzj[2] = rtB.fq0udmcr0d - rtB.mxurwdq3rp;
rtB.fpj41u20a1[0] = (0.0 - rtB.gaqfxcn5mu[0]) - rtB.h4mpthrjzj[0];
rtB.fpj41u20a1[1] = (0.0 - rtB.gaqfxcn5mu[1]) - rtB.h4mpthrjzj[1];
rtB.fpj41u20a1[2] = (0.0 - rtB.gaqfxcn5mu[2]) - rtB.h4mpthrjzj[2];
%<(SLibCGCallSubFcn("rt_mrdivide_U1d1x3_U2d3x3_Yd1x3_snf", ["rtB.fpj41u20a1", "rtB.a2i2fdw0sz", "rtB.hdpsy3sguu"], 0, 3, 0))>;
for (dzyocmumow = 0; dzyocmumow < 1; dzyocmumow++) {
    if (%<(SLibCGIRIsSampleHit(1, 3))>) {
        i = dzyocmumow * 3;
        c2g3f2ksqa_idx_0 = 0.0 * rtB.k52s5q41hk[i];
        c2g3f2ksqa_idx_1 = rtB.k52s5q41hk[i + 1] * 0.0;
        c2g3f2ksqa_idx_2 = rtB.k52s5q41hk[i + 2] * 0.0;
    }
}
if (%<(SLibCGIRIsSampleHit(1, 4))>) {
    rtB.ivl5z2vmyi[0] = c2g3f2ksqa_idx_0;
    rtB.ivl5z2vmyi[1] = c2g3f2ksqa_idx_1;
    rtB.ivl5z2vmyi[2] = c2g3f2ksqa_idx_2;
}
c2g3f2ksqa_idx_0 = rtB.a5kvjjzqcc[0] + rtB.ivl5z2vmyi[0];
rtB.pjxjfknbqz[0] = c2g3f2ksqa_idx_0;
rtB.k0esd4omu2[0] = c2g3f2ksqa_idx_0 / rtP.Constant_Value_i4rpol133v;
rtB.grafq4xnvz[0] = rtX.igfhqv0lvj[0];
c2g3f2ksqa_idx_0 = rtB.a5kvjjzqcc[1] + rtB.ivl5z2vmyi[1];
rtB.pjxjfknbqz[1] = c2g3f2ksqa_idx_0;
rtB.k0esd4omu2[1] = c2g3f2ksqa_idx_0 / rtP.Constant_Value_i4rpol133v;
rtB.grafq4xnvz[1] = rtX.igfhqv0lvj[1];
c2g3f2ksqa_idx_0 = rtB.a5kvjjzqcc[2] + rtB.ivl5z2vmyi[2];
rtB.pjxjfknbqz[2] = c2g3f2ksqa_idx_0;
rtB.k0esd4omu2[2] = c2g3f2ksqa_idx_0 / rtP.Constant_Value_i4rpol133v;
rtB.grafq4xnvz[2] = rtX.igfhqv0lvj[2];
rtB.czqbao5rcr = rtB.grafq4xnvz[1] * rtB.p1cjwgdban[2];
rtB.ds0u1ctsfa = rtB.p1cjwgdban[0] * rtB.grafq4xnvz[2];
rtB.mbnstg1xrg = rtB.grafq4xnvz[0] * rtB.p1cjwgdban[1];
rtB.jwmr4335zo = rtB.p1cjwgdban[1] * rtB.grafq4xnvz[2];
rtB.mgaxq1x2cb = rtB.grafq4xnvz[0] * rtB.p1cjwgdban[2];
rtB.cjk455jyf1 = rtB.p1cjwgdban[0] * rtB.grafq4xnvz[1];
rtB.lbvpk2cioa[0] = rtB.czqbao5rcr - rtB.jwmr4335zo;
rtB.lbvpk2cioa[1] = rtB.ds0u1ctsfa - rtB.mgaxq1x2cb;
rtB.lbvpk2cioa[2] = rtB.mbnstg1xrg - rtB.cjk455jyf1;
for (i = 0; i < 3; i++) {
    rtB.o3epcvura2[i] = rtB.k0esd4omu2[i] + rtB.lbvpk2cioa[i];
    rtB.oe1t3pfjur[3 * i] = rtB.nxlaprucin[i];
    rtB.oe1t3pfjur[3 * i + 1] = rtB.nxlaprucin[i + 3];
    rtB.oe1t3pfjur[3 * i + 2] = rtB.nxlaprucin[i + 6];
}
c2g3f2ksqa_idx_0 = rtB.grafq4xnvz[1];
c2g3f2ksqa_idx_1 = rtB.grafq4xnvz[0];
c2g3f2ksqa_idx_2 = rtB.grafq4xnvz[2];
for (i = 0; i < 3; i++) {
    rtB.nycpslghoj[i] = (rtB.oe1t3pfjur[i + 3] * c2g3f2ksqa_idx_0 + rtB.oe1t3pfjur[i] * c2g3f2ksqa_idx_1) + rtB.oe1t3pfjur[i + 6] * c2g3f2ksqa_idx_2;
}
%<SLibInsertSolverResetCode()>\
%closefile cfgTxt
%<cfgTxt>
%<LibSetSystemField(system, "CachedOutputLocalVars", localVarDecl)>
%assign ::GlobalCurrentTID = []
%endif
%if tid == 3
%assign ::GlobalCurrentTID = 3
%assign cfgTxt = ""
%openfile cfgTxt
%assign localVarDecl = ""
%openfile localVarDecl

real_T dnnaxdcdma;
real_T ek2k14s413;
real_T j5ohr2e2zd;
real_T lxy1ok5bys;
int32_T i;
%closefile localVarDecl
rtB.czkarcoix3[0] = rtP.coefAdjust_Gain[0] * rtP.Constant6_Value[0];
rtB.czkarcoix3[1] = rtP.coefAdjust_Gain[1] * rtP.Constant6_Value[1];
rtB.czkarcoix3[2] = rtP.coefAdjust_Gain[2] * rtP.Constant6_Value[2];
if (muDoubleScalarAbs(rtP.FlatEarthtoLLA_LL0[0]) > rtP.CompareToConstant_const_abt4xuk4oi) {
    j5ohr2e2zd = muDoubleScalarMod(rtP.FlatEarthtoLLA_LL0[0] + rtP.Bias_Bias_dw3it2mgbt, rtP.Constant2_Value_njsj4azasy) + rtP.Bias1_Bias_jixhqnsnsh;
} else {
    j5ohr2e2zd = rtP.FlatEarthtoLLA_LL0[0];
}
lxy1ok5bys = muDoubleScalarAbs(j5ohr2e2zd);
if (lxy1ok5bys > rtP.CompareToConstant_const_nv04wgg20q) {
    rtB.idzov0xqov = ((lxy1ok5bys + rtP.Bias_Bias_dzgopcrirx) * rtP.Gain_Gain + rtP.Bias1_Bias_fmis1slqel) * muDoubleScalarSign(j5ohr2e2zd);
    j5ohr2e2zd = rtP.Constant_Value_gxkbwrysrc;
} else {
    rtB.idzov0xqov = j5ohr2e2zd;
    j5ohr2e2zd = rtP.Constant1_Value_dgld0ymnit;
}
j5ohr2e2zd += rtP.FlatEarthtoLLA_LL0[1];
if (muDoubleScalarAbs(j5ohr2e2zd) > rtP.CompareToConstant_const_cbnqt4m3vq) {
    rtB.kf3nkdp1sm = muDoubleScalarMod(j5ohr2e2zd + rtP.Bias_Bias_afrbxfkpq4, rtP.Constant2_Value_mbyiuuie40) + rtP.Bias1_Bias_jpxdd4e1oi;
} else {
    rtB.kf3nkdp1sm = j5ohr2e2zd;
}
/* Unit Conversion - from: deg to: rad
 Expression: output = (0.0174533*input) + (0) */
j5ohr2e2zd = 0.017453292519943295 * rtB.idzov0xqov;
lxy1ok5bys = rtP.f_Value - rtP.Constant_Value_pjdesp3rvm;
ek2k14s413 = rtP.Constant_Value_kdka53fglp - lxy1ok5bys * lxy1ok5bys;
if (%<(LibIsMajorTimeStep())>) {
    if (rtDW.n0rsg5tawa != 0) {
        %<(RTMSetBlockStateForSolverChangedAtMajorStep())>;
        %<(RTMSetContTimeOutputInconsistentWithStateAtMajorStep())>;
        rtDW.n0rsg5tawa = 0;
    }
    lxy1ok5bys = muDoubleScalarSqrt(ek2k14s413);
} else if (ek2k14s413 < 0.0) {
    lxy1ok5bys = -muDoubleScalarSqrt(muDoubleScalarAbs(ek2k14s413));
    rtDW.n0rsg5tawa = 1;
} else {
    lxy1ok5bys = muDoubleScalarSqrt(ek2k14s413);
}
ek2k14s413 = muDoubleScalarSin(j5ohr2e2zd);
ek2k14s413 = rtP.Constant_Value_k4mkjjrubk - lxy1ok5bys * lxy1ok5bys * ek2k14s413 * ek2k14s413;
if (%<(LibIsMajorTimeStep())>) {
    if (rtDW.lyamxhsgtb != 0) {
        %<(RTMSetBlockStateForSolverChangedAtMajorStep())>;
        %<(RTMSetContTimeOutputInconsistentWithStateAtMajorStep())>;
        rtDW.lyamxhsgtb = 0;
    }
    dnnaxdcdma = muDoubleScalarSqrt(ek2k14s413);
} else if (ek2k14s413 < 0.0) {
    dnnaxdcdma = -muDoubleScalarSqrt(muDoubleScalarAbs(ek2k14s413));
    rtDW.lyamxhsgtb = 1;
} else {
    dnnaxdcdma = muDoubleScalarSqrt(ek2k14s413);
}
dnnaxdcdma = rtP.Constant1_Value_f3g5vycunl / dnnaxdcdma;
rtB.o0lznmwy04 = muDoubleScalarAtan2(rtP.Constant2_Value_fmjdnwbdte, (rtP.Constant_Value_cg2fb4qko2 - lxy1ok5bys * lxy1ok5bys) * dnnaxdcdma / ek2k14s413);
rtB.frkjltmijt = muDoubleScalarAtan2(rtP.Constant3_Value_jtpisyudw2, dnnaxdcdma * muDoubleScalarCos(j5ohr2e2zd));
/* Unit Conversion - from: deg to: rad
 Expression: output = (0.0174533*input) + (0) */
muDoubleScalarSinCos(0.017453292519943295 * rtP.FlatEarthtoLLA_psi, &rtB.legy4gcyuq, &rtB.pq2n04xswi);
rtB.hcxyo5x1fp = rtP.Constant_Value_i4rpol133v * rtP.Constant5_Value;
for (i = 0; i < 3; i++) {
    ek2k14s413 = rtP.Constant4_Value[3 * i] * rtP.Constant_Value_i4rpol133v;
    rtB.mqmfqguhsp[3 * i] = ek2k14s413;
    rtB.i4ejkbvukm[3 * i] = 0.0;
    rtB.a2i2fdw0sz[3 * i] = ek2k14s413;
    ek2k14s413 = rtP.Constant4_Value[3 * i + 1] * rtP.Constant_Value_i4rpol133v;
    rtB.mqmfqguhsp[3 * i + 1] = ek2k14s413;
    rtB.i4ejkbvukm[3 * i + 1] = 0.0;
    rtB.a2i2fdw0sz[3 * i + 1] = ek2k14s413;
    ek2k14s413 = rtP.Constant4_Value[3 * i + 2] * rtP.Constant_Value_i4rpol133v;
    rtB.mqmfqguhsp[3 * i + 2] = ek2k14s413;
    rtB.i4ejkbvukm[3 * i + 2] = 0.0;
    rtB.a2i2fdw0sz[3 * i + 2] = ek2k14s413;
    rtB.k52s5q41hk[i] = 0.0;
}
/* Unit Conversion - from: deg to: rad
 Expression: output = (0.0174533*input) + (0) */
muDoubleScalarSinCos(0.017453292519943295 * rtP.WindShearModel_Wdeg, &j5ohr2e2zd, &lxy1ok5bys);
rtB.o2yo20byci[0] = -rtP.WindShearModel_W_20 * lxy1ok5bys;
rtB.o2yo20byci[1] = -rtP.WindShearModel_W_20 * j5ohr2e2zd;
rtB.o2yo20byci[2] = -rtP.WindShearModel_W_20 * rtP.Wdeg1_Value;
j5ohr2e2zd = rtP.ref_heightz0_Value;
if (%<(LibIsMajorTimeStep())>) {
    if (rtDW.iez3ymddrk != 0) {
        %<(RTMSetBlockStateForSolverChangedAtMajorStep())>;
        %<(RTMSetContTimeOutputInconsistentWithStateAtMajorStep())>;
        rtDW.iez3ymddrk = 0;
    }
} else if (rtP.ref_heightz0_Value < 0.0) {
    j5ohr2e2zd = 0.0;
    rtDW.iez3ymddrk = 1;
}
rtB.glou0tzny0 = muDoubleScalarLog(j5ohr2e2zd);
%closefile cfgTxt
%<cfgTxt>
%<LibSetSystemField(system, "CachedOutput3LocalVars", localVarDecl)>
%assign ::GlobalCurrentTID = []
%endif
%endfunction
%function OutputsFcnProtoTypeForTID(block, system, tid) Output
%if tid == 0
%assign ::GlobalCurrentTID = 0
%assign fcnProtoType = ""
%openfile fcnProtoType
static void Outputs0(\
%assign comma = ""
%closefile fcnProtoType
%<SLibCG_SetFcnProtoType(0, 3, fcnProtoType)>
%assign ::GlobalCurrentTID = []
%endif
%if tid == 3
%assign ::GlobalCurrentTID = 3
%assign fcnProtoType = ""
%openfile fcnProtoType
static void Outputs1(\
%assign comma = ""
%closefile fcnProtoType
%<SLibCG_SetFcnProtoType(0, 4, fcnProtoType)>
%assign ::GlobalCurrentTID = []
%endif
%endfunction
